import numpy as np
import matplotlib.pyplot as plt
from scipy.fft import fft
import pandas as pd

def transformada_Fourier(omega, k):
    t = np.linspace(0, 2*np.pi, 500)
    x = np.linspace(0, 10, 500)
    particula = np.exp(1j * (k * x - omega * t))

# Transformada de Fourier
    fourier = fft(particula)
# Posicion
    posicion = np.fft.fftfreq(len(x), x[1] - x[0])

# Posicion dominante
    posicion_dominante = np.abs(posicion[np.argmax(np.abs(fourier))])

# Gráfica
    plt.figure(figsize=(12,6))
    plt.subplot(2, 1, 2)
    plt.plot(x, particula.real, label='Partícula (Parte Real)')
    plt.title('Señal de la Partícula')
    plt.legend()

    plt.figure(figsize=(12,6))
    plt.subplot(2, 1, 2)
    plt.plot(posicion, np.abs(fourier))
    plt.title('Transformada de Fourier con respecto al espacio')
    plt.xlabel('Posición')
    plt.show()

    plt.figure(figsize=(12,6))
    plt.subplot(2, 1, 2)
    plt.plot(t, np.abs(fourier))
    plt.title('Transformada de Fourier con respecto al tiempo')
    plt.xlabel('Tiempo')
    plt.show()

    print(f'Posición donde se encuentra: {posicion_dominante}')
    plt.plot(posicion,particula)

omega = float(input("Digite el valor de omega: "))
k = float(input("Digite el valor de k: "))
transformada_Fourier(omega,k)
